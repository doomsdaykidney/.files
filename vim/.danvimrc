" ----------------------------------------------------------------------------
"
"                          Important to be at the top
"
" -----------------------------------------------------------------------------

set nocompatible	" Prevents vim from defaulting to certin Vi defaults which break things


" ----------------------------------------------------------------------------
"
"                          Plugins Specific Stuff (Vundle)
"
" -----------------------------------------------------------------------------
filetype off      " Required by Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

" PLUGINS START
Plugin 'ajh17/VimCompletesMe'         " Tab autocomplete
Plugin 'jlfwong/vim-mercenary'        " HGblame to see who and when a change was made
Plugin 'justinmk/vim-syntax-extra'    " Super Syntax Highlighting
Plugin 'morhetz/gruvbox'              " Colours
Plugin 'vim-scripts/fitnesse.vim'     " Fitnesse syntax highlighting
" PLUGINS END

call vundle#end()            " required
filetype plugin indent on    " required


" ----------------------------------------------------------------------------
"
"                          	Settings due to using Plugins
"
" -----------------------------------------------------------------------------

" ajh17/VimCompletesMe
let g:completekey = "<Insert>" " Move gcompletekey to get tab complete working
set completeopt=longest,menuone "???

" justinmk/vim-syntax-extra
syntax enable

" mohertz/gruvbox
colorscheme gruvbox
let g:gruvbox_contrast_dark = 'hard'
set background=dark

" vim-scripts/fitnesse.vim
au BufNewFile,BufRead *.wiki set ft=fitnesse

" ----------------------------------------------------------------------------
"
"                          	Non-Plugin Settings
"
" -----------------------------------------------------------------------------

highlight cursorline cterm=bold guibg=#282828
highlight LineNr guibg=#282828

" Show (partial) command in status line
set showcmd

" sets tabs to 2 spaces
set tabstop=2          

" Underlines the current line - can be modified (needs to be below colourscheme)
set cursorline

" Allows 5 lines at the top and bottom of the screen before screen moves
set scrolloff=5

" Line Numbers
set number

set termguicolors " requires vim Version 8.X
set hlsearch
set incsearch " highlights as you type out your search

" Custom Key Bindings
map <F2> :Vexplore<Enter>        " opens a new explore window vertically
map <F3> :Hexplore<Enter>        " opens a new explore window horizonally
map <F4> :Rexplore<Enter>        " reopens an explore window, use ':Explore' if no previous

map <F5> :bp<Enter>              " previous open buffer
map <F6> :bn<Enter>              " next open buffer
map <F7> :b# \| bd # <Enter>     " move to previous buffer, close current one

"  Mouse Options
set mouse+=a      " click and drag selets text in visual mode

" Writes the file automatically (i.e. when using ctags to move between files)
set autowrite
set autoread

" jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif

" ------- Things that alex has suggested that are really quite cool!

" Smarter searching
set ignorecase
set smartcase


" ----------------------------------------------------------------------------
"
"                          	Settings for when not using plugins
"
" -----------------------------------------------------------------------------

" set t_Co=256
" colorscheme desert
" syntax enable


set showmatch     " When a bracket is inserted, briefly shows matching bracket
set cindent       " Automatic C program indenting (set by 'shiftwidth')
set shiftwidth=2  " Number of spaces to indent automatically
set expandtab     " <Tab> inserts spaces rather than a real tab
set ruler         " Shows the current cursor position within file in statusline
set complete=.,w,b,u,t  " Complete options
                   " .	scan the current buffer
                   " w	scan buffers from other windows
                   " b	scan other loaded buffers
                   " u	scan the unloaded buffers
                   " t	tag completion


" Not really sure what they do yet...
set noautoindent
set backspace=2  " Backspace, current setting of 2 is archaic, change



if has("folding")
  set foldmethod=indent
  set foldlevel=99
endif " has("folding")

" ----------------------------------------------------------------------------
"
"                          	Kept from DAI .vimrc
"
" -----------------------------------------------------------------------------

map <F8> :!ut_ctags<CR>
map! <F8> <ESC>:!ut_ctags<CR>
set tags=~/source/.tags,./tags,./TAGS,tags,TAGS,.tags,~/.tags,~/.TAGS
map <F9> :!ut_lib %<CR>
map! <F9> <ESC>:!ut_lib %<CR>
map <F10> :!ut_build %<CR>
map! <F10> <ESC>:!ut_build %<CR>

" Gets <F10> to do slightly different things from ut_build based upon file type
if has("autocmd")

  autocmd BufRead web_* map <F10> :!ut_lib % && ut_build web_om<CR>
  autocmd BufRead web_* map! <F10> <ESC>:!ut_lib % && ut_build web_om<CR>

  autocmd BufRead web_om.c map <F10> :!ut_build web_om<CR>
  autocmd BufRead web_om.c map! <F10> <ESC>:!ut_build web_om<CR>

  autocmd BufRead web_status_* map <F10> :!ut_lib % && ut_build web_status<CR>
  autocmd BufRead web_status_* map! <F10> <ESC>:!ut_lib % && ut_build web_status<CR>

  autocmd BufRead web_status.c map <F10> :!ut_build web_status<CR>
  autocmd BufRead web_status.c map! <F10> <ESC>:!ut_build web_status<CR>

  autocmd BufRead web_loi_* map <F10> :!ut_lib % && ut_build web_loi<CR>
  autocmd BufRead web_loi_* map! <F10> <ESC>:!ut_lib % && ut_build web_loi<CR>

  autocmd BufRead web_loi.c map <F10> :!ut_build web_loi<CR>
  autocmd BufRead web_loi.c map! <F10> <ESC>:!ut_build web_loi<CR>

  autocmd BufRead web_setup.c map <F10> :!ut_build %<CR>
  autocmd BufRead web_setup.c map! <F10> <ESC>:!ut_build %<CR>

  autocmd BufRead web_roi* map <F10> :!ut_lib % && ut_roi<CR>
  autocmd BufRead web_roi* map! <F10> <ESC>:!ut_lib % && ut_roi<CR>

  autocmd BufRead web_moi* map <F10> :!ut_lib % && ut_build web_moi<CR>
  autocmd BufRead web_moi* map! <F10> <ESC>:!ut_lib % && ut_build web_moi<CR>

  autocmd BufRead rdt* map <F10> :!ut_lib % && ut_build rdt_control<CR>
  autocmd BufRead rdt* map! <F10> <ESC>:!ut_lib % && ut_build rdt_control<CR>

  autocmd BufRead *.js map <F10> :!web_setup<CR>
  autocmd BufRead *.js map! <F10> :<ESC>!web_setup<CR>

  autocmd BufRead *.css map <F10> :!web_setup<CR>
  autocmd BufRead *.css map! <F10> :<ESC>!web_setup<CR>

endif " has("autocmd")

if has("autocmd")

  autocmd BufRead *.plugin set filetype=plugin
  autocmd BufRead sdf.txt set filetype=sdf
  autocmd BufRead df_alias.txt set filetype=df_alias
  autocmd BufRead df_proj_alias.txt set filetype=df_alias
  autocmd BufRead *.menu_config set filetype=datascript
  autocmd BufRead *.screen_settings set filetype=datascript
  autocmd BufRead *.settings set filetype=datascript

endif " has("autocmd")
