# ------------------------------------------------------------------------------
#
#                                      V 2.7
#
# ------------------------------------------------------------------------------

# Set ctrl-a as <prefix> - closer and doesn't conflict with vim
unbind C-b
set -g prefix C-a

# No delay for escape key press
set -sg escape-time 0

# Starts window / pane numbering at 1 rather than the default of 0
set -g base-index 1

# Mouse Options
set -g mouse on

# Reload config with <prefix> R
bind R source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded..."

# Automatically renumber windows upon window closure
set -g renumber-windows on

# Increase tmux terminal history (default ~2000)
set -g history-limit 100000

# Add truecolor support - Plugins
set-option -ga terminal-overrides ",xterm-256color:Tc"



# Status Bar -------------------------------------------------------------------

set -g status-position top
set -g status-justify left
set -g status-left ''
set -g status-right ''

set -g status-bg default
set -g status-fg colour8
set -g status-attr underscore
set -g status-interval 1
setw -g window-status-format "#[bg=default]#[fg=colour8]   #I #W  "
setw -g window-status-current-format "#[bg=default]#[fg=#ebdbb2]   #I #W  "
setw -g window-status-separator "|"

# Increase length of right hand status lenght from default of 40
set -g status-right-length 256

# Shows the time and number of terminal sessions connected
set -g status-right '#(. ~/.files/scripts/tmux_status_right.sh)'



# Panes ------------------------------------------------------------------------

# Stay in directory upon creation of new window or splitting a pane into two
# Doesn't work???
# bind c new-window -c "#{pane_current_path}"
bind c new-window -n ''
bind h split-window -h -c '#{pane_current_path}'
bind v split-window -v -c '#{pane_current_path}'

# Allow Ctrl [ + Shift ] + Tab to move between tmux panes - Mintty
set -s user-keys[0] "\e[1;5I"
set -s user-keys[1] "\e[1;6I"
bind-key -n User0 next-window
bind-key -n User1 previous-window

# Use Shift-arrow keys to switch between windows
bind-key -n S-Right next-window
bind-key -n S-Left previous-window
bind-key -n S-Up new-window -n ''

# Background colours
set -g window-style bg=black
set -g window-active-style bg=black

# Border colours
set -g pane-active-border-fg colour8
set -g pane-active-border-bg black
set -g pane-border-fg colour8
set -g pane-border-bg black 





#https://unix.stackexchange.com/questions/318281/how-to-copy-and-paste-with-a-mouse-with-tmux
#https://awhan.wordpress.com/2010/06/20/copy-paste-in-tmux/
#vim paste look into https://github.com/ConradIrwin/vim-bracketed-paste

# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"



